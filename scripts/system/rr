#!/bin/bash

IFS=""
shopt -s expand_aliases
alias read='IFS=" " read'

rrconf=~/.repreprorc

[ -f $rrconf ] &&
    source $rrconf

export REPREPRO_BASE_DIR REPREPRO_CONFIG_DIR

push_back()
{
    arr=$1; shift
    for val in "$@"
    do
        eval $arr[\${#$arr[@]}]=\$val
    done
}

declare -a RR_ARGS
declare -a REPREPRO_ARGS
get_rr_args()
{
    local cmd arg
    for opt in $@
    do
        case $opt
        in
            init)
                push_back RR_ARGS $opt
                ;;
            add|includedeb)
                cmd=includedeb
                push_back REPREPRO_ARGS includedeb
                ;;
            list)
                cmd=list
                push_back REPREPRO_ARGS list
                ;;
            *.deb)
                if [ "$cmd" = includedeb -a -z "$arg" ]
                then
                    push_back REPREPRO_ARGS $CODENAME
                fi
                push_back REPREPRO_ARGS $opt
                unset cmd arg
                ;;
            *)
                arg=$opt
                push_back REPREPRO_ARGS $opt
                ;;
        esac
   done
}

check_empty()
{
    shopt -s nullglob # to not croak on empty expansion
    shopt -s dotglob # to include hidden files
    local -a files=(${1:-.}/*)
    shopt -u nullglob dotglob
    if [ "$files" ]
    then
        return 1
    else
        return 0
    fi
}

ask_yes_no()
{
    local REPLY
    while true; do
        read -n1 ${1:+-p $@}
        echo
        case $REPLY in
            [Yy]) return 0;;
            [Nn] ) return 1;;
        esac
    done
}

die()
{
    [ -n "$1" ] && echo "$1" >&2;
    exit 1
}

init_repo()
{
    if ! check_empty
    then
        die 'Directory is not empty!'
    fi

    repo_path=$(pwd)
    repo_name=$(basename $repo_path)

    (
        set -e
        mkdir -p conf
        cd conf
        cat > distributions << EOF
Origin: $repo_name
Label: $repo_name
Suite: unstable
Codename: $repo_name
Version: 1.0
Architectures: i386 amd64
Components: main
Description: $repo_name is a newly created custom repository
EOF
    ) || die

    local overwrite=true
    if [ -e "$rrconf" ]
    then
        ask_yes_no "Overwrite $rrconf (y/n)? " ||
            overwrite=false
    fi

    $overwrite && cat > $rrconf << EOF
REPREPRO_BASE_DIR="$repo_path"
EOF
}

main()
{
    for opt in $@
    do
        case $opt
        in
            init)
                init_repo
                continue
                ;;
        esac
    done
}

get_rr_args $@

if [ "$RR_ARGS" ]
then
    main ${RR_ARGS[@]}
fi

if [ "$REPREPRO_ARGS" ]
then
    reprepro ${REPREPRO_ARGS[@]}
fi
